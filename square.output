Terminals unused in grammar

    SEMICOLUMN
    OTHER
    COM


Grammar

    0 $accept: prog $end

    1 prog: stmts

    2 stmts: ε
    3      | stmt stmts

    4 stmt: ID EQ NUM
    5     | RETURN OPBRA IDFUNC binop CLBRA
    6     | RETURN OPBRA IDFUNC ID CLBRA OP OPBRA IDFUNC ID CLBRA
    7     | RETURN OPBRA IDFUNC binop CLBRA OP OPBRA IDFUNC binop CLBRA
    8     | ID EQ OPBRA IDFUNC NUM CLBRA
    9     | OPBRA PRINT param CLBRA
   10     | RETURN binop
   11     | ID
   12     | OPBRA IDFUNC ID ifcomp NUM COL
   13     | OPBRA GT IDFUNC ID COL
   14     | CLBRA NLINE
   15     | NLINE

   16 ifcomp: LT
   17       | GT
   18       | EQ EQ

   19 param: ID
   20      | NUM

   21 binop: ID OP NUM
   22      | NUM OP NUM


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUM <number> (258) 4 8 12 20 21 22
    OP <string> (259) 6 7 21 22
    SEMICOLUMN (260)
    PRINT (261) 9
    RETURN (262) 5 6 7 10
    OPBRA <string> (263) 5 6 7 8 9 12 13
    CLBRA <string> (264) 5 6 7 8 9 14
    IDFUNC <string> (265) 5 6 7 8 12 13
    GT <string> (266) 13 17
    LT <string> (267) 16
    OTHER (268)
    ID <string> (269) 4 6 8 11 12 13 19 21
    COM (270)
    COL (271) 12 13
    NLINE (272) 14 15
    EQ <string> (273) 4 8 18


Nonterminals, with rules where they appear

    $accept (19)
        on left: 0
    prog (20)
        on left: 1
        on right: 0
    stmts (21)
        on left: 2 3
        on right: 1 3
    stmt <number> (22)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 3
    ifcomp <string> (23)
        on left: 16 17 18
        on right: 12
    param <strnum> (24)
        on left: 19 20
        on right: 9
    binop <binop> (25)
        on left: 21 22
        on right: 5 7 10


State 0

    0 $accept: • prog $end

    RETURN  shift, and go to state 1
    OPBRA   shift, and go to state 2
    CLBRA   shift, and go to state 3
    ID      shift, and go to state 4
    NLINE   shift, and go to state 5

    $default  reduce using rule 2 (stmts)

    prog   go to state 6
    stmts  go to state 7
    stmt   go to state 8


State 1

    5 stmt: RETURN • OPBRA IDFUNC binop CLBRA
    6     | RETURN • OPBRA IDFUNC ID CLBRA OP OPBRA IDFUNC ID CLBRA
    7     | RETURN • OPBRA IDFUNC binop CLBRA OP OPBRA IDFUNC binop CLBRA
   10     | RETURN • binop

    NUM    shift, and go to state 9
    OPBRA  shift, and go to state 10
    ID     shift, and go to state 11

    binop  go to state 12


State 2

    9 stmt: OPBRA • PRINT param CLBRA
   12     | OPBRA • IDFUNC ID ifcomp NUM COL
   13     | OPBRA • GT IDFUNC ID COL

    PRINT   shift, and go to state 13
    IDFUNC  shift, and go to state 14
    GT      shift, and go to state 15


State 3

   14 stmt: CLBRA • NLINE

    NLINE  shift, and go to state 16


State 4

    4 stmt: ID • EQ NUM
    8     | ID • EQ OPBRA IDFUNC NUM CLBRA
   11     | ID •

    EQ  shift, and go to state 17

    $default  reduce using rule 11 (stmt)


State 5

   15 stmt: NLINE •

    $default  reduce using rule 15 (stmt)


State 6

    0 $accept: prog • $end

    $end  shift, and go to state 18


State 7

    1 prog: stmts •

    $default  reduce using rule 1 (prog)


State 8

    3 stmts: stmt • stmts

    RETURN  shift, and go to state 1
    OPBRA   shift, and go to state 2
    CLBRA   shift, and go to state 3
    ID      shift, and go to state 4
    NLINE   shift, and go to state 5

    $default  reduce using rule 2 (stmts)

    stmts  go to state 19
    stmt   go to state 8


State 9

   22 binop: NUM • OP NUM

    OP  shift, and go to state 20


State 10

    5 stmt: RETURN OPBRA • IDFUNC binop CLBRA
    6     | RETURN OPBRA • IDFUNC ID CLBRA OP OPBRA IDFUNC ID CLBRA
    7     | RETURN OPBRA • IDFUNC binop CLBRA OP OPBRA IDFUNC binop CLBRA

    IDFUNC  shift, and go to state 21


State 11

   21 binop: ID • OP NUM

    OP  shift, and go to state 22


State 12

   10 stmt: RETURN binop •

    $default  reduce using rule 10 (stmt)


State 13

    9 stmt: OPBRA PRINT • param CLBRA

    NUM  shift, and go to state 23
    ID   shift, and go to state 24

    param  go to state 25


State 14

   12 stmt: OPBRA IDFUNC • ID ifcomp NUM COL

    ID  shift, and go to state 26


State 15

   13 stmt: OPBRA GT • IDFUNC ID COL

    IDFUNC  shift, and go to state 27


State 16

   14 stmt: CLBRA NLINE •

    $default  reduce using rule 14 (stmt)


State 17

    4 stmt: ID EQ • NUM
    8     | ID EQ • OPBRA IDFUNC NUM CLBRA

    NUM    shift, and go to state 28
    OPBRA  shift, and go to state 29


State 18

    0 $accept: prog $end •

    $default  accept


State 19

    3 stmts: stmt stmts •

    $default  reduce using rule 3 (stmts)


State 20

   22 binop: NUM OP • NUM

    NUM  shift, and go to state 30


State 21

    5 stmt: RETURN OPBRA IDFUNC • binop CLBRA
    6     | RETURN OPBRA IDFUNC • ID CLBRA OP OPBRA IDFUNC ID CLBRA
    7     | RETURN OPBRA IDFUNC • binop CLBRA OP OPBRA IDFUNC binop CLBRA

    NUM  shift, and go to state 9
    ID   shift, and go to state 31

    binop  go to state 32


State 22

   21 binop: ID OP • NUM

    NUM  shift, and go to state 33


State 23

   20 param: NUM •

    $default  reduce using rule 20 (param)


State 24

   19 param: ID •

    $default  reduce using rule 19 (param)


State 25

    9 stmt: OPBRA PRINT param • CLBRA

    CLBRA  shift, and go to state 34


State 26

   12 stmt: OPBRA IDFUNC ID • ifcomp NUM COL

    GT  shift, and go to state 35
    LT  shift, and go to state 36
    EQ  shift, and go to state 37

    ifcomp  go to state 38


State 27

   13 stmt: OPBRA GT IDFUNC • ID COL

    ID  shift, and go to state 39


State 28

    4 stmt: ID EQ NUM •

    $default  reduce using rule 4 (stmt)


State 29

    8 stmt: ID EQ OPBRA • IDFUNC NUM CLBRA

    IDFUNC  shift, and go to state 40


State 30

   22 binop: NUM OP NUM •

    $default  reduce using rule 22 (binop)


State 31

    6 stmt: RETURN OPBRA IDFUNC ID • CLBRA OP OPBRA IDFUNC ID CLBRA
   21 binop: ID • OP NUM

    OP     shift, and go to state 22
    CLBRA  shift, and go to state 41


State 32

    5 stmt: RETURN OPBRA IDFUNC binop • CLBRA
    7     | RETURN OPBRA IDFUNC binop • CLBRA OP OPBRA IDFUNC binop CLBRA

    CLBRA  shift, and go to state 42


State 33

   21 binop: ID OP NUM •

    $default  reduce using rule 21 (binop)


State 34

    9 stmt: OPBRA PRINT param CLBRA •

    $default  reduce using rule 9 (stmt)


State 35

   17 ifcomp: GT •

    $default  reduce using rule 17 (ifcomp)


State 36

   16 ifcomp: LT •

    $default  reduce using rule 16 (ifcomp)


State 37

   18 ifcomp: EQ • EQ

    EQ  shift, and go to state 43


State 38

   12 stmt: OPBRA IDFUNC ID ifcomp • NUM COL

    NUM  shift, and go to state 44


State 39

   13 stmt: OPBRA GT IDFUNC ID • COL

    COL  shift, and go to state 45


State 40

    8 stmt: ID EQ OPBRA IDFUNC • NUM CLBRA

    NUM  shift, and go to state 46


State 41

    6 stmt: RETURN OPBRA IDFUNC ID CLBRA • OP OPBRA IDFUNC ID CLBRA

    OP  shift, and go to state 47


State 42

    5 stmt: RETURN OPBRA IDFUNC binop CLBRA •
    7     | RETURN OPBRA IDFUNC binop CLBRA • OP OPBRA IDFUNC binop CLBRA

    OP  shift, and go to state 48

    $default  reduce using rule 5 (stmt)


State 43

   18 ifcomp: EQ EQ •

    $default  reduce using rule 18 (ifcomp)


State 44

   12 stmt: OPBRA IDFUNC ID ifcomp NUM • COL

    COL  shift, and go to state 49


State 45

   13 stmt: OPBRA GT IDFUNC ID COL •

    $default  reduce using rule 13 (stmt)


State 46

    8 stmt: ID EQ OPBRA IDFUNC NUM • CLBRA

    CLBRA  shift, and go to state 50


State 47

    6 stmt: RETURN OPBRA IDFUNC ID CLBRA OP • OPBRA IDFUNC ID CLBRA

    OPBRA  shift, and go to state 51


State 48

    7 stmt: RETURN OPBRA IDFUNC binop CLBRA OP • OPBRA IDFUNC binop CLBRA

    OPBRA  shift, and go to state 52


State 49

   12 stmt: OPBRA IDFUNC ID ifcomp NUM COL •

    $default  reduce using rule 12 (stmt)


State 50

    8 stmt: ID EQ OPBRA IDFUNC NUM CLBRA •

    $default  reduce using rule 8 (stmt)


State 51

    6 stmt: RETURN OPBRA IDFUNC ID CLBRA OP OPBRA • IDFUNC ID CLBRA

    IDFUNC  shift, and go to state 53


State 52

    7 stmt: RETURN OPBRA IDFUNC binop CLBRA OP OPBRA • IDFUNC binop CLBRA

    IDFUNC  shift, and go to state 54


State 53

    6 stmt: RETURN OPBRA IDFUNC ID CLBRA OP OPBRA IDFUNC • ID CLBRA

    ID  shift, and go to state 55


State 54

    7 stmt: RETURN OPBRA IDFUNC binop CLBRA OP OPBRA IDFUNC • binop CLBRA

    NUM  shift, and go to state 9
    ID   shift, and go to state 11

    binop  go to state 56


State 55

    6 stmt: RETURN OPBRA IDFUNC ID CLBRA OP OPBRA IDFUNC ID • CLBRA

    CLBRA  shift, and go to state 57


State 56

    7 stmt: RETURN OPBRA IDFUNC binop CLBRA OP OPBRA IDFUNC binop • CLBRA

    CLBRA  shift, and go to state 58


State 57

    6 stmt: RETURN OPBRA IDFUNC ID CLBRA OP OPBRA IDFUNC ID CLBRA •

    $default  reduce using rule 6 (stmt)


State 58

    7 stmt: RETURN OPBRA IDFUNC binop CLBRA OP OPBRA IDFUNC binop CLBRA •

    $default  reduce using rule 7 (stmt)

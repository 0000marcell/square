Terminals unused in grammar

    SEMICOLUMN
    OTHER


Grammar

    0 $accept: prog $end

    1 prog: stmts

    2 stmts: ε
    3      | stmt stmts

    4 stmt: OPBRA GT IDFUNC
    5     | ID COM ID COL
    6     | NLINE ID OP ID NLINE CLBRA NLINE
    7     | OPBRA IDFUNC NUM COM NUM CLBRA
    8     | OPBRA PRINT NUM CLBRA


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUM <number> (258) 7 8
    OP <string> (259) 6
    SEMICOLUMN (260)
    PRINT (261) 8
    OPBRA <string> (262) 4 7 8
    CLBRA <string> (263) 6 7 8
    IDFUNC <string> (264) 4 7
    GT <string> (265) 4
    OTHER (266)
    ID <string> (267) 5 6
    COM (268) 5 7
    COL (269) 5
    NLINE (270) 6


Nonterminals, with rules where they appear

    $accept (16)
        on left: 0
    prog (17)
        on left: 1
        on right: 0
    stmts (18)
        on left: 2 3
        on right: 1 3
    stmt <number> (19)
        on left: 4 5 6 7 8
        on right: 3


State 0

    0 $accept: • prog $end

    OPBRA  shift, and go to state 1
    ID     shift, and go to state 2
    NLINE  shift, and go to state 3

    $default  reduce using rule 2 (stmts)

    prog   go to state 4
    stmts  go to state 5
    stmt   go to state 6


State 1

    4 stmt: OPBRA • GT IDFUNC
    7     | OPBRA • IDFUNC NUM COM NUM CLBRA
    8     | OPBRA • PRINT NUM CLBRA

    PRINT   shift, and go to state 7
    IDFUNC  shift, and go to state 8
    GT      shift, and go to state 9


State 2

    5 stmt: ID • COM ID COL

    COM  shift, and go to state 10


State 3

    6 stmt: NLINE • ID OP ID NLINE CLBRA NLINE

    ID  shift, and go to state 11


State 4

    0 $accept: prog • $end

    $end  shift, and go to state 12


State 5

    1 prog: stmts •

    $default  reduce using rule 1 (prog)


State 6

    3 stmts: stmt • stmts

    OPBRA  shift, and go to state 1
    ID     shift, and go to state 2
    NLINE  shift, and go to state 3

    $default  reduce using rule 2 (stmts)

    stmts  go to state 13
    stmt   go to state 6


State 7

    8 stmt: OPBRA PRINT • NUM CLBRA

    NUM  shift, and go to state 14


State 8

    7 stmt: OPBRA IDFUNC • NUM COM NUM CLBRA

    NUM  shift, and go to state 15


State 9

    4 stmt: OPBRA GT • IDFUNC

    IDFUNC  shift, and go to state 16


State 10

    5 stmt: ID COM • ID COL

    ID  shift, and go to state 17


State 11

    6 stmt: NLINE ID • OP ID NLINE CLBRA NLINE

    OP  shift, and go to state 18


State 12

    0 $accept: prog $end •

    $default  accept


State 13

    3 stmts: stmt stmts •

    $default  reduce using rule 3 (stmts)


State 14

    8 stmt: OPBRA PRINT NUM • CLBRA

    CLBRA  shift, and go to state 19


State 15

    7 stmt: OPBRA IDFUNC NUM • COM NUM CLBRA

    COM  shift, and go to state 20


State 16

    4 stmt: OPBRA GT IDFUNC •

    $default  reduce using rule 4 (stmt)


State 17

    5 stmt: ID COM ID • COL

    COL  shift, and go to state 21


State 18

    6 stmt: NLINE ID OP • ID NLINE CLBRA NLINE

    ID  shift, and go to state 22


State 19

    8 stmt: OPBRA PRINT NUM CLBRA •

    $default  reduce using rule 8 (stmt)


State 20

    7 stmt: OPBRA IDFUNC NUM COM • NUM CLBRA

    NUM  shift, and go to state 23


State 21

    5 stmt: ID COM ID COL •

    $default  reduce using rule 5 (stmt)


State 22

    6 stmt: NLINE ID OP ID • NLINE CLBRA NLINE

    NLINE  shift, and go to state 24


State 23

    7 stmt: OPBRA IDFUNC NUM COM NUM • CLBRA

    CLBRA  shift, and go to state 25


State 24

    6 stmt: NLINE ID OP ID NLINE • CLBRA NLINE

    CLBRA  shift, and go to state 26


State 25

    7 stmt: OPBRA IDFUNC NUM COM NUM CLBRA •

    $default  reduce using rule 7 (stmt)


State 26

    6 stmt: NLINE ID OP ID NLINE CLBRA • NLINE

    NLINE  shift, and go to state 27


State 27

    6 stmt: NLINE ID OP ID NLINE CLBRA NLINE •

    $default  reduce using rule 6 (stmt)

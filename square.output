Terminals unused in grammar

    OP
    SEMICOLUMN
    PRINT
    GT
    OTHER
    COM


Grammar

    0 $accept: prog $end

    1 prog: stmts

    2 stmts: ε
    3      | stmt stmts

    4 stmt: ID EQ NUM
    5     | OPBRA IDFUNC ID LT NUM COL
    6     | CLBRA NLINE
    7     | NLINE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUM <number> (258) 4 5
    OP <string> (259)
    SEMICOLUMN (260)
    PRINT (261)
    OPBRA <string> (262) 5
    CLBRA <string> (263) 6
    IDFUNC <string> (264) 5
    GT <string> (265)
    LT <string> (266) 5
    OTHER (267)
    ID <string> (268) 4 5
    COM (269)
    COL (270) 5
    NLINE (271) 6 7
    EQ (272) 4


Nonterminals, with rules where they appear

    $accept (18)
        on left: 0
    prog (19)
        on left: 1
        on right: 0
    stmts (20)
        on left: 2 3
        on right: 1 3
    stmt <number> (21)
        on left: 4 5 6 7
        on right: 3


State 0

    0 $accept: • prog $end

    OPBRA  shift, and go to state 1
    CLBRA  shift, and go to state 2
    ID     shift, and go to state 3
    NLINE  shift, and go to state 4

    $default  reduce using rule 2 (stmts)

    prog   go to state 5
    stmts  go to state 6
    stmt   go to state 7


State 1

    5 stmt: OPBRA • IDFUNC ID LT NUM COL

    IDFUNC  shift, and go to state 8


State 2

    6 stmt: CLBRA • NLINE

    NLINE  shift, and go to state 9


State 3

    4 stmt: ID • EQ NUM

    EQ  shift, and go to state 10


State 4

    7 stmt: NLINE •

    $default  reduce using rule 7 (stmt)


State 5

    0 $accept: prog • $end

    $end  shift, and go to state 11


State 6

    1 prog: stmts •

    $default  reduce using rule 1 (prog)


State 7

    3 stmts: stmt • stmts

    OPBRA  shift, and go to state 1
    CLBRA  shift, and go to state 2
    ID     shift, and go to state 3
    NLINE  shift, and go to state 4

    $default  reduce using rule 2 (stmts)

    stmts  go to state 12
    stmt   go to state 7


State 8

    5 stmt: OPBRA IDFUNC • ID LT NUM COL

    ID  shift, and go to state 13


State 9

    6 stmt: CLBRA NLINE •

    $default  reduce using rule 6 (stmt)


State 10

    4 stmt: ID EQ • NUM

    NUM  shift, and go to state 14


State 11

    0 $accept: prog $end •

    $default  accept


State 12

    3 stmts: stmt stmts •

    $default  reduce using rule 3 (stmts)


State 13

    5 stmt: OPBRA IDFUNC ID • LT NUM COL

    LT  shift, and go to state 15


State 14

    4 stmt: ID EQ NUM •

    $default  reduce using rule 4 (stmt)


State 15

    5 stmt: OPBRA IDFUNC ID LT • NUM COL

    NUM  shift, and go to state 16


State 16

    5 stmt: OPBRA IDFUNC ID LT NUM • COL

    COL  shift, and go to state 17


State 17

    5 stmt: OPBRA IDFUNC ID LT NUM COL •

    $default  reduce using rule 5 (stmt)

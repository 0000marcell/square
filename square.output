Terminals unused in grammar

    OP
    SEMICOLUMN
    OTHER
    COM


Grammar

    0 $accept: prog $end

    1 prog: stmts

    2 stmts: ε
    3      | stmt stmts

    4 stmt: ID EQ NUM
    5     | ID EQ OPBRA IDFUNC NUM CLBRA
    6     | OPBRA PRINT ID CLBRA
    7     | ID
    8     | OPBRA IDFUNC ID ifcomp NUM COL
    9     | OPBRA GT IDFUNC ID COL
   10     | CLBRA NLINE
   11     | NLINE

   12 ifcomp: LT
   13       | GT
   14       | EQ EQ


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUM <number> (258) 4 5 8
    OP <string> (259)
    SEMICOLUMN (260)
    PRINT (261) 6
    OPBRA <string> (262) 5 6 8 9
    CLBRA <string> (263) 5 6 10
    IDFUNC <string> (264) 5 8 9
    GT <string> (265) 9 13
    LT <string> (266) 12
    OTHER (267)
    ID <string> (268) 4 5 6 7 8 9
    COM (269)
    COL (270) 8 9
    NLINE (271) 10 11
    EQ <string> (272) 4 5 14


Nonterminals, with rules where they appear

    $accept (18)
        on left: 0
    prog (19)
        on left: 1
        on right: 0
    stmts (20)
        on left: 2 3
        on right: 1 3
    stmt <number> (21)
        on left: 4 5 6 7 8 9 10 11
        on right: 3
    ifcomp <string> (22)
        on left: 12 13 14
        on right: 8


State 0

    0 $accept: • prog $end

    OPBRA  shift, and go to state 1
    CLBRA  shift, and go to state 2
    ID     shift, and go to state 3
    NLINE  shift, and go to state 4

    $default  reduce using rule 2 (stmts)

    prog   go to state 5
    stmts  go to state 6
    stmt   go to state 7


State 1

    6 stmt: OPBRA • PRINT ID CLBRA
    8     | OPBRA • IDFUNC ID ifcomp NUM COL
    9     | OPBRA • GT IDFUNC ID COL

    PRINT   shift, and go to state 8
    IDFUNC  shift, and go to state 9
    GT      shift, and go to state 10


State 2

   10 stmt: CLBRA • NLINE

    NLINE  shift, and go to state 11


State 3

    4 stmt: ID • EQ NUM
    5     | ID • EQ OPBRA IDFUNC NUM CLBRA
    7     | ID •

    EQ  shift, and go to state 12

    $default  reduce using rule 7 (stmt)


State 4

   11 stmt: NLINE •

    $default  reduce using rule 11 (stmt)


State 5

    0 $accept: prog • $end

    $end  shift, and go to state 13


State 6

    1 prog: stmts •

    $default  reduce using rule 1 (prog)


State 7

    3 stmts: stmt • stmts

    OPBRA  shift, and go to state 1
    CLBRA  shift, and go to state 2
    ID     shift, and go to state 3
    NLINE  shift, and go to state 4

    $default  reduce using rule 2 (stmts)

    stmts  go to state 14
    stmt   go to state 7


State 8

    6 stmt: OPBRA PRINT • ID CLBRA

    ID  shift, and go to state 15


State 9

    8 stmt: OPBRA IDFUNC • ID ifcomp NUM COL

    ID  shift, and go to state 16


State 10

    9 stmt: OPBRA GT • IDFUNC ID COL

    IDFUNC  shift, and go to state 17


State 11

   10 stmt: CLBRA NLINE •

    $default  reduce using rule 10 (stmt)


State 12

    4 stmt: ID EQ • NUM
    5     | ID EQ • OPBRA IDFUNC NUM CLBRA

    NUM    shift, and go to state 18
    OPBRA  shift, and go to state 19


State 13

    0 $accept: prog $end •

    $default  accept


State 14

    3 stmts: stmt stmts •

    $default  reduce using rule 3 (stmts)


State 15

    6 stmt: OPBRA PRINT ID • CLBRA

    CLBRA  shift, and go to state 20


State 16

    8 stmt: OPBRA IDFUNC ID • ifcomp NUM COL

    GT  shift, and go to state 21
    LT  shift, and go to state 22
    EQ  shift, and go to state 23

    ifcomp  go to state 24


State 17

    9 stmt: OPBRA GT IDFUNC • ID COL

    ID  shift, and go to state 25


State 18

    4 stmt: ID EQ NUM •

    $default  reduce using rule 4 (stmt)


State 19

    5 stmt: ID EQ OPBRA • IDFUNC NUM CLBRA

    IDFUNC  shift, and go to state 26


State 20

    6 stmt: OPBRA PRINT ID CLBRA •

    $default  reduce using rule 6 (stmt)


State 21

   13 ifcomp: GT •

    $default  reduce using rule 13 (ifcomp)


State 22

   12 ifcomp: LT •

    $default  reduce using rule 12 (ifcomp)


State 23

   14 ifcomp: EQ • EQ

    EQ  shift, and go to state 27


State 24

    8 stmt: OPBRA IDFUNC ID ifcomp • NUM COL

    NUM  shift, and go to state 28


State 25

    9 stmt: OPBRA GT IDFUNC ID • COL

    COL  shift, and go to state 29


State 26

    5 stmt: ID EQ OPBRA IDFUNC • NUM CLBRA

    NUM  shift, and go to state 30


State 27

   14 ifcomp: EQ EQ •

    $default  reduce using rule 14 (ifcomp)


State 28

    8 stmt: OPBRA IDFUNC ID ifcomp NUM • COL

    COL  shift, and go to state 31


State 29

    9 stmt: OPBRA GT IDFUNC ID COL •

    $default  reduce using rule 9 (stmt)


State 30

    5 stmt: ID EQ OPBRA IDFUNC NUM • CLBRA

    CLBRA  shift, and go to state 32


State 31

    8 stmt: OPBRA IDFUNC ID ifcomp NUM COL •

    $default  reduce using rule 8 (stmt)


State 32

    5 stmt: ID EQ OPBRA IDFUNC NUM CLBRA •

    $default  reduce using rule 5 (stmt)

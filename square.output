Terminals unused in grammar

    SEMICOLUMN
    OTHER
    COM


Grammar

    0 $accept: prog $end

    1 prog: stmts

    2 stmts: ε
    3      | stmt stmts

    4 stmt: ID EQ NUM
    5     | ID EQ OPBRA IDFUNC ID OP NUM CLBRA
    6     | ID EQ OPBRA IDFUNC NUM CLBRA
    7     | OPBRA PRINT param CLBRA
    8     | RETURN ID OP NUM
    9     | ID
   10     | OPBRA IDFUNC ID ifcomp NUM COL
   11     | OPBRA GT IDFUNC ID COL
   12     | CLBRA NLINE
   13     | NLINE

   14 ifcomp: LT
   15       | GT
   16       | EQ EQ

   17 param: ID
   18      | NUM


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUM <number> (258) 4 5 6 8 10 18
    OP <string> (259) 5 8
    SEMICOLUMN (260)
    PRINT (261) 7
    RETURN (262) 8
    OPBRA <string> (263) 5 6 7 10 11
    CLBRA <string> (264) 5 6 7 12
    IDFUNC <string> (265) 5 6 10 11
    GT <string> (266) 11 15
    LT <string> (267) 14
    OTHER (268)
    ID <string> (269) 4 5 6 8 9 10 11 17
    COM (270)
    COL (271) 10 11
    NLINE (272) 12 13
    EQ <string> (273) 4 5 6 16


Nonterminals, with rules where they appear

    $accept (19)
        on left: 0
    prog (20)
        on left: 1
        on right: 0
    stmts (21)
        on left: 2 3
        on right: 1 3
    stmt <number> (22)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 3
    ifcomp <string> (23)
        on left: 14 15 16
        on right: 10
    param <strnum> (24)
        on left: 17 18
        on right: 7


State 0

    0 $accept: • prog $end

    RETURN  shift, and go to state 1
    OPBRA   shift, and go to state 2
    CLBRA   shift, and go to state 3
    ID      shift, and go to state 4
    NLINE   shift, and go to state 5

    $default  reduce using rule 2 (stmts)

    prog   go to state 6
    stmts  go to state 7
    stmt   go to state 8


State 1

    8 stmt: RETURN • ID OP NUM

    ID  shift, and go to state 9


State 2

    7 stmt: OPBRA • PRINT param CLBRA
   10     | OPBRA • IDFUNC ID ifcomp NUM COL
   11     | OPBRA • GT IDFUNC ID COL

    PRINT   shift, and go to state 10
    IDFUNC  shift, and go to state 11
    GT      shift, and go to state 12


State 3

   12 stmt: CLBRA • NLINE

    NLINE  shift, and go to state 13


State 4

    4 stmt: ID • EQ NUM
    5     | ID • EQ OPBRA IDFUNC ID OP NUM CLBRA
    6     | ID • EQ OPBRA IDFUNC NUM CLBRA
    9     | ID •

    EQ  shift, and go to state 14

    $default  reduce using rule 9 (stmt)


State 5

   13 stmt: NLINE •

    $default  reduce using rule 13 (stmt)


State 6

    0 $accept: prog • $end

    $end  shift, and go to state 15


State 7

    1 prog: stmts •

    $default  reduce using rule 1 (prog)


State 8

    3 stmts: stmt • stmts

    RETURN  shift, and go to state 1
    OPBRA   shift, and go to state 2
    CLBRA   shift, and go to state 3
    ID      shift, and go to state 4
    NLINE   shift, and go to state 5

    $default  reduce using rule 2 (stmts)

    stmts  go to state 16
    stmt   go to state 8


State 9

    8 stmt: RETURN ID • OP NUM

    OP  shift, and go to state 17


State 10

    7 stmt: OPBRA PRINT • param CLBRA

    NUM  shift, and go to state 18
    ID   shift, and go to state 19

    param  go to state 20


State 11

   10 stmt: OPBRA IDFUNC • ID ifcomp NUM COL

    ID  shift, and go to state 21


State 12

   11 stmt: OPBRA GT • IDFUNC ID COL

    IDFUNC  shift, and go to state 22


State 13

   12 stmt: CLBRA NLINE •

    $default  reduce using rule 12 (stmt)


State 14

    4 stmt: ID EQ • NUM
    5     | ID EQ • OPBRA IDFUNC ID OP NUM CLBRA
    6     | ID EQ • OPBRA IDFUNC NUM CLBRA

    NUM    shift, and go to state 23
    OPBRA  shift, and go to state 24


State 15

    0 $accept: prog $end •

    $default  accept


State 16

    3 stmts: stmt stmts •

    $default  reduce using rule 3 (stmts)


State 17

    8 stmt: RETURN ID OP • NUM

    NUM  shift, and go to state 25


State 18

   18 param: NUM •

    $default  reduce using rule 18 (param)


State 19

   17 param: ID •

    $default  reduce using rule 17 (param)


State 20

    7 stmt: OPBRA PRINT param • CLBRA

    CLBRA  shift, and go to state 26


State 21

   10 stmt: OPBRA IDFUNC ID • ifcomp NUM COL

    GT  shift, and go to state 27
    LT  shift, and go to state 28
    EQ  shift, and go to state 29

    ifcomp  go to state 30


State 22

   11 stmt: OPBRA GT IDFUNC • ID COL

    ID  shift, and go to state 31


State 23

    4 stmt: ID EQ NUM •

    $default  reduce using rule 4 (stmt)


State 24

    5 stmt: ID EQ OPBRA • IDFUNC ID OP NUM CLBRA
    6     | ID EQ OPBRA • IDFUNC NUM CLBRA

    IDFUNC  shift, and go to state 32


State 25

    8 stmt: RETURN ID OP NUM •

    $default  reduce using rule 8 (stmt)


State 26

    7 stmt: OPBRA PRINT param CLBRA •

    $default  reduce using rule 7 (stmt)


State 27

   15 ifcomp: GT •

    $default  reduce using rule 15 (ifcomp)


State 28

   14 ifcomp: LT •

    $default  reduce using rule 14 (ifcomp)


State 29

   16 ifcomp: EQ • EQ

    EQ  shift, and go to state 33


State 30

   10 stmt: OPBRA IDFUNC ID ifcomp • NUM COL

    NUM  shift, and go to state 34


State 31

   11 stmt: OPBRA GT IDFUNC ID • COL

    COL  shift, and go to state 35


State 32

    5 stmt: ID EQ OPBRA IDFUNC • ID OP NUM CLBRA
    6     | ID EQ OPBRA IDFUNC • NUM CLBRA

    NUM  shift, and go to state 36
    ID   shift, and go to state 37


State 33

   16 ifcomp: EQ EQ •

    $default  reduce using rule 16 (ifcomp)


State 34

   10 stmt: OPBRA IDFUNC ID ifcomp NUM • COL

    COL  shift, and go to state 38


State 35

   11 stmt: OPBRA GT IDFUNC ID COL •

    $default  reduce using rule 11 (stmt)


State 36

    6 stmt: ID EQ OPBRA IDFUNC NUM • CLBRA

    CLBRA  shift, and go to state 39


State 37

    5 stmt: ID EQ OPBRA IDFUNC ID • OP NUM CLBRA

    OP  shift, and go to state 40


State 38

   10 stmt: OPBRA IDFUNC ID ifcomp NUM COL •

    $default  reduce using rule 10 (stmt)


State 39

    6 stmt: ID EQ OPBRA IDFUNC NUM CLBRA •

    $default  reduce using rule 6 (stmt)


State 40

    5 stmt: ID EQ OPBRA IDFUNC ID OP • NUM CLBRA

    NUM  shift, and go to state 41


State 41

    5 stmt: ID EQ OPBRA IDFUNC ID OP NUM • CLBRA

    CLBRA  shift, and go to state 42


State 42

    5 stmt: ID EQ OPBRA IDFUNC ID OP NUM CLBRA •

    $default  reduce using rule 5 (stmt)
